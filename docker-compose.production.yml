services:
  downloader:
    build: .
    # HINT: We have to copy the local .bundle/config to /usr/local/bundle because the behaviour in the container is different # test if files added to the volume are avaiable in the container:       cd ./files && ls -la &&
    command: zsh -c "mkdir -p -m 0600 ~/.ssh &&
      ssh-keyscan github.com >> ~/.ssh/known_hosts && eval $(ssh-agent) &&
      ssh-add - <<< \"${FRIENDLYCLEANERCODEASSISTANT_SSH_KEY}\" &&
      gem update --system --quiet --silent &&
      cp ./.bundle/config /usr/local/bundle &&
      bundle config &&
      bundle install &&
      bundle exec rails db:migrate &&
      bundle exec rails s"
    environment:
      - RAILS_ENV=production
      # TODO: Get information about local production db and implement as env variables
      - DOWNLOADER_DB_HOST=${DOWNLOADER_DB_HOST}
      - DOWNLOADER_DB_NAME=${DOWNLOADER_DB_NAME}
      - DOWNLOADER_DB_USERNAME=${DOWNLOADER_DB_USERNAME}
      - DOWNLOADER_DB_PASSWORD=${DOWNLOADER_DB_PASSWORD}
      - DOWNLOADER_DB_PORT=${DOWNLOADER_DB_PORT}
    ports:
      - '3000:3000'
    restart: always
    volumes:
      - ./:/repository-downloader
      # TODO: set path to local data to this env variable
      - ${DOWNLOADER_DATA_PATH}/:/./files
# TODO: change used folder for data in project
